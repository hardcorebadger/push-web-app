"use client"

import { useState } from "react"
import { Bell, Terminal } from "lucide-react"

type CodeSnippet = {
  code: string;
  highlights: {
    subtle: string[];
    accent: string[];
  };
};

type CodeSnippets = {
  node: CodeSnippet;
  python: CodeSnippet;
  go: CodeSnippet;
};

const codeSnippets: CodeSnippets = {
  node: {
    code: `
import { Pushable } from '@pushable/node'
const pushable = new Pushable(import.meta.env.PUSHABLE_API_KEY)
 
pushable.register('user-123', {
  token: request.body.token,
  platform: 'android'
})
  
pushable.send('user-123', {
  title: 'Welcome!',
  body: 'Your account is ready ðŸŽ‰',
  action: 'https://app.example.com/welcome'
})`,
    highlights: {
      subtle: ['import', 'const', 'new', 'request.body.token', 'android', 'title', 'body', 'action'],
      accent: ['Pushable', 'pushable', "'user-123'"]
    }
  },
  python: {
    code: `
from pushable import Pushable
pushable = Pushable(import.meta.env.PUSHABLE_API_KEY)
 
pushable.register('user-123', {
  token: request.body.token,
  platform: 'android'
})
 
pushable.send(
    user_id='user-123',
    title='New Message',
    body='You have a new message ðŸ’¬',
    action='https://app.example.com/inbox'
)`,
    highlights: {
      subtle: ['from', 'import', 'request.body.token', 'platform', 'user_id', 'title', 'body', 'action'],
      accent: ['Pushable', 'pushable', 'register', 'send']
    }
  },
  go: {
    code: `
import "github.com/pushable/sdk"
pushable := pushable.New(import.meta.env.PUSHABLE_API_KEY)
 
pushable.Register('user-123', pushable.Device{
  Token:    request.body.token,
  Platform: "android",
})
 
pushable.Send(pushable.Message{
    UserID:  "user-123",
    Title:   "Payment Received",
    Body:    "Your payment was successful ðŸ’¸",
    Action:  "https://app.example.com/payments",
})`,
    highlights: {
      subtle: ['import', 'request.body.token', 'UserID', 'Title', 'Body', 'Action', 'Token', 'Platform'],
      accent: ['pushable', 'New', 'Register', 'Send', 'Device', 'Message']
    }
  },
}

function NodeJS() {
  return (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">

<path d="M12 23.9562C11.658 23.9562 11.34 23.8672 11.043 23.7132L8.014 21.9752C7.559 21.7332 7.787 21.6452 7.924 21.6012C8.538 21.4032 8.652 21.3592 9.29 21.0062C9.358 20.9622 9.45 20.9842 9.518 21.0282L11.841 22.3712C11.931 22.4152 12.046 22.4152 12.114 22.3712L21.201 17.2872C21.291 17.2432 21.337 17.1552 21.337 17.0452V6.89922C21.337 6.78922 21.292 6.70122 21.201 6.65722L12.114 1.59622C12.023 1.55222 11.909 1.55222 11.841 1.59622L2.754 6.65722C2.663 6.70122 2.617 6.81122 2.617 6.89922V17.0452C2.617 17.1332 2.663 17.2432 2.754 17.2872L5.236 18.6742C6.58 19.3342 7.422 18.5642 7.422 17.7942V7.78022C7.422 7.64822 7.536 7.51622 7.696 7.51622H8.857C8.994 7.51622 9.13 7.62622 9.13 7.78022V17.7932C9.13 19.5322 8.151 20.5442 6.443 20.5442C5.919 20.5442 5.509 20.5442 4.348 19.9942L1.957 18.6742C1.66909 18.5155 1.42866 18.283 1.26046 18.0006C1.09225 17.7181 1.00235 17.396 1 17.0672V6.92122C1 6.26122 1.364 5.64522 1.957 5.31522L11.044 0.230224C11.34 0.0789042 11.6676 0 12 0C12.3324 0 12.66 0.0789042 12.956 0.230224L22.044 5.31422C22.636 5.64422 23 6.26022 23 6.92022V17.0662C23 17.7262 22.636 18.3422 22.044 18.6732L12.957 23.7562C12.655 23.8872 12.3292 23.9546 12 23.9542M14.801 16.9772C10.816 16.9772 9.996 15.2172 9.996 13.7202C9.996 13.5882 10.11 13.4562 10.269 13.4562H11.453C11.59 13.4562 11.703 13.5442 11.703 13.6762C11.886 14.8422 12.41 15.4142 14.824 15.4142C16.737 15.4142 17.557 14.9962 17.557 14.0062C17.557 13.4342 17.329 13.0162 14.346 12.7302C11.863 12.4872 10.315 11.9602 10.315 10.0452C10.315 8.26222 11.863 7.20522 14.46 7.20522C17.375 7.20522 18.81 8.17422 18.992 10.2872C18.9898 10.3587 18.9657 10.4278 18.923 10.4852C18.878 10.5292 18.81 10.5732 18.741 10.5732H17.557C17.4995 10.5718 17.444 10.5518 17.3989 10.516C17.3538 10.4803 17.3215 10.4309 17.307 10.3752C17.033 9.16522 16.327 8.76822 14.46 8.76822C12.364 8.76822 12.114 9.47222 12.114 10.0012C12.114 10.6392 12.41 10.8372 15.234 11.1892C18.035 11.5412 19.356 12.0472 19.356 13.9392C19.333 15.8772 17.694 16.9772 14.801 16.9772Z" />


</svg>
  )
}

function Python() {
  return (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
<path d="M12 22.0718C10.49 22.0718 9.66 22.0718 8.97 21.6018C8.68 21.4118 8.41 21.1418 8.21 20.8318C7.75 20.1618 7.75 19.3318 7.75 17.8218V16.5718H6.5C4.99 16.5718 4.16 16.5718 3.47 16.1018C3.18 15.9118 2.91 15.6418 2.71 15.3318C2.25 14.6618 2.25 13.8318 2.25 12.3218C2.25 10.8118 2.25 9.98178 2.72 9.29178C2.91 9.00178 3.18 8.73178 3.49 8.53178C4.16 8.07178 4.99 8.07178 6.5 8.07178H7.75V6.82178C7.75 5.31178 7.75 4.48178 8.22 3.79178C8.41 3.50178 8.68 3.23178 8.99 3.03178C9.66 2.57178 10.49 2.57178 12 2.57178C13.51 2.57178 14.34 2.57178 15.03 3.04178C15.32 3.23178 15.59 3.50178 15.79 3.81178C16.25 4.48178 16.25 5.31178 16.25 6.82178V8.07178H17.5C19.01 8.07178 19.84 8.07178 20.53 8.54178C20.82 8.73178 21.09 9.00178 21.29 9.31178C21.75 9.98178 21.75 10.8118 21.75 12.3218C21.75 13.8318 21.75 14.6618 21.28 15.3518C21.09 15.6418 20.82 15.9118 20.51 16.1118C19.84 16.5718 19.01 16.5718 17.5 16.5718H16.25V17.8218C16.25 19.3318 16.25 20.1618 15.78 20.8518C15.59 21.1418 15.32 21.4118 15.01 21.6118C14.34 22.0718 13.51 22.0718 12 22.0718ZM6.5 9.57178C5.33 9.57178 4.62 9.57178 4.31 9.78178C4.16 9.87178 4.05 9.99178 3.97 10.1118C3.75 10.4418 3.75 11.1418 3.75 12.3218C3.75 13.5018 3.75 14.2018 3.96 14.5118C4.05 14.6618 4.17 14.7718 4.29 14.8518C4.62 15.0718 5.32 15.0718 6.5 15.0718H7.75V12.3218C7.75 11.9118 8.09 11.5718 8.5 11.5718H14.75V6.82178C14.75 5.65178 14.75 4.94178 14.54 4.63178C14.45 4.48178 14.33 4.37178 14.21 4.29178C13.88 4.07178 13.22 4.07178 12 4.07178C10.78 4.07178 10.12 4.07178 9.81 4.28178C9.66 4.37178 9.55 4.49178 9.47 4.61178C9.25 4.94178 9.25 5.64178 9.25 6.82178V8.07178H12C12.41 8.07178 12.75 8.41178 12.75 8.82178C12.75 9.23178 12.41 9.57178 12 9.57178H6.5ZM16.25 9.57178V12.3218C16.25 12.7318 15.91 13.0718 15.5 13.0718H9.25V17.8218C9.25 18.9918 9.25 19.7018 9.46 20.0118C9.55 20.1618 9.67 20.2718 9.79 20.3518C10.12 20.5718 10.82 20.5718 12 20.5718C13.18 20.5718 13.88 20.5718 14.19 20.3618C14.34 20.2718 14.45 20.1518 14.53 20.0318C14.75 19.7018 14.75 19.0018 14.75 17.8218V16.5718H12C11.59 16.5718 11.25 16.2318 11.25 15.8218C11.25 15.4118 11.59 15.0718 12 15.0718H17.5C18.67 15.0718 19.38 15.0718 19.69 14.8618C19.84 14.7718 19.95 14.6518 20.03 14.5318C20.25 14.2018 20.25 13.5018 20.25 12.3218C20.25 11.1418 20.25 10.4418 20.04 10.1318C19.95 9.98178 19.83 9.87178 19.71 9.79178C19.38 9.57178 18.68 9.57178 17.5 9.57178H16.25ZM10.25 5.83178C10.25 6.24178 10.59 6.58178 11 6.58178V6.59178C11.41 6.59178 11.75 6.25178 11.75 5.83178C11.75 5.63286 11.671 5.4421 11.5303 5.30145C11.3897 5.1608 11.1989 5.08178 11 5.08178C10.8011 5.08178 10.6103 5.1608 10.4697 5.30145C10.329 5.4421 10.25 5.63286 10.25 5.83178ZM12.25 18.8218C12.25 19.2318 12.59 19.5718 13 19.5718V19.5818C13.41 19.5818 13.75 19.2418 13.75 18.8218C13.75 18.6229 13.671 18.4321 13.5303 18.2914C13.3897 18.1508 13.1989 18.0718 13 18.0718C12.8011 18.0718 12.6103 18.1508 12.4697 18.2914C12.329 18.4321 12.25 18.6229 12.25 18.8218Z" />
</svg>
  )
}

function Go() {
  return (  
    <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
<path d="M20.999 12.057C20.999 5.45404 14.964 2.74304 11.792 3.01904C11.207 3.01904 10.538 3.40704 10.538 4.11004C10.538 4.81304 10.948 5.26304 12.883 5.45404C14.514 5.61204 16.061 6.84404 16.313 7.09704C16.696 7.46704 16.747 7.96804 16.556 8.37304C16.452 8.58174 16.2913 8.75689 16.0923 8.87841C15.8933 8.99993 15.6641 9.06288 15.431 9.06004C14.902 9.07604 14.728 8.98604 13.946 8.49104C13.3222 8.03621 12.5635 7.80445 11.792 7.83304C9.11998 7.91804 7.49998 9.96504 7.49998 12.063C7.53923 13.1768 8.00802 14.2322 8.8081 15.0081C9.60819 15.7839 10.6775 16.22 11.792 16.225C12.5813 16.2212 13.3539 15.9976 14.0233 15.5794C14.6928 15.1612 15.2325 14.5648 15.582 13.857C15.83 13.351 15.482 13.137 15.279 13.126H11.792C11.37 13.126 10.538 12.986 10.538 12.057C10.538 11.135 11.268 10.877 11.685 10.877H17.759C18.299 10.915 18.49 11.27 18.519 11.472C18.541 16.236 15.583 17.659 14.464 18.109C13.53 18.492 12.574 18.728 11.556 18.728C10.993 18.728 10.487 19.15 10.543 19.92C10.5524 20.1912 10.6594 20.4499 10.8445 20.6484C11.0295 20.8468 11.2801 20.9717 11.55 21C18.834 21 20.999 15.01 20.999 12.057ZM8.06298 6.37604C8.36134 6.37604 8.64749 6.25751 8.85847 6.04653C9.06945 5.83556 9.18798 5.54941 9.18798 5.25104C9.18798 4.95267 9.06945 4.66652 8.85847 4.45554C8.64749 4.24456 8.36134 4.12604 8.06298 4.12604C7.76461 4.12604 7.47846 4.24456 7.26748 4.45554C7.0565 4.66652 6.93798 4.95267 6.93798 5.25104C6.93798 5.54941 7.0565 5.83556 7.26748 6.04653C7.47846 6.25751 7.76461 6.37604 8.06298 6.37604ZM5.24998 9.18904C5.39771 9.18904 5.544 9.15994 5.6805 9.1034C5.81699 9.04687 5.94101 8.964 6.04547 8.85953C6.14994 8.75507 6.2328 8.63105 6.28934 8.49456C6.34588 8.35807 6.37498 8.21178 6.37498 8.06404C6.37498 7.9163 6.34588 7.77001 6.28934 7.63352C6.2328 7.49703 6.14994 7.37301 6.04547 7.26854C5.94101 7.16408 5.81699 7.08121 5.6805 7.02467C5.544 6.96814 5.39771 6.93904 5.24998 6.93904C4.95161 6.93904 4.66546 7.05757 4.45448 7.26854C4.2435 7.47952 4.12498 7.76567 4.12498 8.06404C4.12498 8.36241 4.2435 8.64856 4.45448 8.85953C4.66546 9.07051 4.95161 9.18904 5.24998 9.18904ZM4.12598 13.126C4.42435 13.126 4.71049 13.0075 4.92147 12.7965C5.13245 12.5856 5.25098 12.2994 5.25098 12.001C5.25098 11.7027 5.13245 11.4165 4.92147 11.2055C4.71049 10.9946 4.42435 10.876 4.12598 10.876C3.82761 10.876 3.54146 10.9946 3.33048 11.2055C3.1195 11.4165 3.00098 11.7027 3.00098 12.001C3.00098 12.2994 3.1195 12.5856 3.33048 12.7965C3.54146 13.0075 3.82761 13.126 4.12598 13.126ZM5.24998 17.062C5.39771 17.0621 5.54402 17.0331 5.68053 16.9766C5.81705 16.9201 5.94111 16.8373 6.04562 16.7329C6.15013 16.6285 6.23305 16.5045 6.28965 16.368C6.34625 16.2316 6.37541 16.0853 6.37548 15.9375C6.37554 15.7898 6.34651 15.6435 6.29003 15.507C6.23356 15.3705 6.15074 15.2464 6.04633 15.1419C5.94191 15.0374 5.81792 14.9545 5.68146 14.8979C5.54499 14.8413 5.39871 14.8121 5.25098 14.812C4.95261 14.812 4.66646 14.9306 4.45548 15.1415C4.2445 15.3525 4.12598 15.6387 4.12598 15.937C4.12598 16.2354 4.2445 16.5216 4.45548 16.7325C4.66646 16.9435 4.95161 17.062 5.24998 17.062ZM8.06298 19.875C8.36134 19.875 8.64749 19.7565 8.85847 19.5455C9.06945 19.3346 9.18798 19.0484 9.18798 18.75C9.18798 18.4517 9.06945 18.1655 8.85847 17.9545C8.64749 17.7436 8.36134 17.625 8.06298 17.625C7.76461 17.625 7.47846 17.7436 7.26748 17.9545C7.0565 18.1655 6.93798 18.4517 6.93798 18.75C6.93798 19.0484 7.0565 19.3346 7.26748 19.5455C7.47846 19.7565 7.76461 19.875 8.06298 19.875Z" />
</svg>
  )
}

// function NextJS() {
//     return (
//       <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
//       <path d="M8 8L8.54 7.60933C8.4574 7.49524 8.34078 7.41024 8.20688 7.36653C8.07297 7.32282 7.92867 7.32265 7.79466 7.36603C7.66065 7.40942 7.54382 7.49414 7.46095 7.60803C7.37807 7.72192 7.33339 7.85914 7.33333 8H8ZM12 20.6667C9.70146 20.6667 7.49706 19.7536 5.87174 18.1283C4.24643 16.5029 3.33333 14.2985 3.33333 12H2C2 14.6522 3.05357 17.1957 4.92893 19.0711C6.8043 20.9464 9.34784 22 12 22V20.6667ZM20.6667 12C20.6667 13.1381 20.4425 14.2651 20.007 15.3166C19.5714 16.3681 18.933 17.3235 18.1283 18.1283C17.3235 18.933 16.3681 19.5714 15.3166 20.007C14.2651 20.4425 13.1381 20.6667 12 20.6667V22C14.6522 22 17.1957 20.9464 19.0711 19.0711C20.9464 17.1957 22 14.6522 22 12H20.6667ZM12 3.33333C13.1381 3.33333 14.2651 3.5575 15.3166 3.99304C16.3681 4.42858 17.3235 5.06697 18.1283 5.87174C18.933 6.67652 19.5714 7.63192 20.007 8.68341C20.4425 9.7349 20.6667 10.8619 20.6667 12H22C22 9.34784 20.9464 6.8043 19.0711 4.92893C17.1957 3.05357 14.6522 2 12 2V3.33333ZM12 2C9.34784 2 6.8043 3.05357 4.92893 4.92893C3.05357 6.8043 2 9.34784 2 12H3.33333C3.33333 9.70146 4.24643 7.49706 5.87174 5.87174C7.49706 4.24643 9.70146 3.33333 12 3.33333V2ZM8.66667 18V8H7.33333V18H8.66667ZM7.46 8.39067L16.1267 20.3907L17.2067 19.6093L8.54 7.60933L7.46 8.39067ZM15.3333 7.33333V15.3333H16.6667V7.33333H15.3333Z" />
//       </svg>
//     )
// }

// function Java() {
//   return (
//     <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
// <path d="M6.17501 10.3328C4.96701 10.7408 4.22001 11.3028 4.22001 11.9258C4.22001 12.7738 5.60901 13.5128 7.66001 13.8958C6.89801 14.2818 6.44301 14.7708 6.44301 15.3038C6.44301 16.5468 8.93001 17.5548 11.998 17.5548C12.743 17.5563 13.4867 17.4938 14.221 17.3678M7.66101 13.8968C8.72575 14.0869 9.80545 14.1806 10.887 14.1768C12.595 14.1768 14.152 13.9608 15.332 13.6038M16.442 10.1238C15.031 10.5408 13.063 10.7998 10.887 10.7998C6.59201 10.7998 3.10901 9.79185 3.10901 8.54785C3.10901 7.58785 5.18601 6.76785 8.10901 6.44385" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
// <path d="M22 19.07C22 20.688 17.523 22 12 22C6.477 22 2 20.688 2 19.07C2 17.92 3.707 16.924 7 16.444M18.76 8.788C22.974 7.694 23.576 14.256 17.555 16.444M17.558 2C16.818 2.123 15.425 2.815 15.78 4.593C16.136 6.37 15.632 7.309 15.336 7.556M13.113 2C12.372 2.148 10.979 2.978 11.335 5.111C11.691 7.244 11.187 7.815 10.891 8.111" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
// </svg>
//   )
// }

export default function IntegrationSection() {
  const [platform, setPlatform] = useState<'node' | 'python' | 'go'>('node')
  return (
    <>
      <div className="py-24">
        <div className="max-w-4xl mx-auto flex flex-col items-center">
          {/* Logo */}
          <div className="mb-6">
            <div className="rounded-2xl p-[1px] bg-gradient-to-br from-primary to-gray-400 shadow-lg">
              <div className="bg-black rounded-2xl p-4 flex items-center justify-center">
                <Bell className="h-10 w-10 text-primary" />
              </div>
            </div>
          </div>
          {/* Headline */}
          <h2 className="text-5xl font-light text-center bg-gradient-to-br from-primary to-gray-300 bg-clip-text text-transparent pb-5">
            Integrate in minutes
          </h2>
          <p className="mt-5 text-lg text-muted-foreground text-center max-w-xl">
            A simple, elegant api to send push notifications to your users, wherever they are. No tables, tokens or queues.
          </p>
          {/* Platform Tabs */}
          <div className="mt-8 flex gap-2 flex-wrap justify-center">
            <button
              className={`cursor-pointer px-4 py-2 rounded-full text-sm font-medium border transition-colors flex items-center gap-2 ${platform === 'node' ? 'bg-primary text-black border-primary' : 'bg-black border-zinc-700 text-zinc-300 hover:bg-zinc-900'}`}
              onClick={() => setPlatform('node')}
            >
              <NodeJS />
              Node.js
            </button>
            <button
              className={`cursor-pointer px-4 py-2 rounded-full text-sm font-medium border transition-colors flex items-center gap-2 ${platform === 'python' ? 'bg-primary text-black border-primary' : 'bg-black border-zinc-700 text-zinc-300 hover:bg-zinc-900'}`}
              onClick={() => setPlatform('python')}
            >
              <Python />
              Python
            </button>
            <button
              className={`cursor-pointer px-4 py-2 rounded-full text-sm font-medium border transition-colors flex items-center gap-2 ${platform === 'go' ? 'bg-primary text-black border-primary' : 'bg-black border-zinc-700 text-zinc-300 hover:bg-zinc-900'}`}
              onClick={() => setPlatform('go')}
            >
              <Go />
              Go
            </button>
          </div>
          {/* Code Block */}
          <div className="mt-8 w-full bg-black rounded-xl shadow-lg p-6 border border-zinc-800">
            <div className="flex items-center mb-4 gap-2">
              <Terminal className="h-4 w-4 text-zinc-400" />
              <span className="text-xs text-zinc-400 font-mono">{platform === 'node' ? 'Node.js' : platform === 'python' ? 'Python' : 'Go'}</span>
            </div>
            <pre className="overflow-x-auto text-sm leading-relaxed font-mono">
              <code className="language-javascript">
                {codeSnippets[platform].code.split('\n').map((line: string, i: number) => (
                  <span key={i} className="block">
                    {(() => {
                      const parts = [];
                      let lastIndex = 0;
                      const stringRegex = /["'][^"']*["']/g;
                      let match;
                      
                      while ((match = stringRegex.exec(line)) !== null) {
                        // Add text before the string
                        if (match.index > lastIndex) {
                          parts.push({
                            text: line.slice(lastIndex, match.index),
                            isString: false
                          });
                        }
                        // Add the string
                        parts.push({
                          text: match[0],
                          isString: true
                        });
                        lastIndex = match.index + match[0].length;
                      }
                      
                      // Add any remaining text
                      if (lastIndex < line.length) {
                        parts.push({
                          text: line.slice(lastIndex),
                          isString: false
                        });
                      }
                      
                      return parts.map((part, j) => {
                        if (part.isString) {
                          return (
                            <span key={j} className="text-red-400">
                              {part.text}
                            </span>
                          );
                        }
                        
                        return part.text.split(/(\s+)/).map((word, k) => {
                          const isSubtle = codeSnippets[platform].highlights.subtle.some(h => word.includes(h));
                          return (
                            <span
                              key={`${j}-${k}`}
                              className={`${
                                isSubtle ? 'text-zinc-500' : 'text-zinc-200'
                              }`}
                            >
                              {word}
                            </span>
                          );
                        });
                      });
                    })()}
                  </span>
                ))}
              </code>
            </pre>
          </div>
        </div>
      </div>
    </>
  )
} 